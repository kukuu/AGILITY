{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red14\green14\blue14;\red34\green98\blue219;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs32 \cf2 \expnd0\expndtw0\kerning0
\
Unit Test\
\
TeamCity is great for running unit test, which can nicely show the test result report and code coverage report. TeamCity supports different test frameworks. We pick {\field{\*\fldinst{HYPERLINK "http://karma-runner.github.io/1.0/intro/installation.html"}}{\fldrslt \cf3 Karma }}as our test framework, which can be used for backend apps (Node.js) as well as front-end (Angular) apps. Also, Karma is TeamCity friendly by using its {\field{\*\fldinst{HYPERLINK "http://karma-runner.github.io/1.0/plus/teamcity.html"}}{\fldrslt \cf3 TeamCity plugin }}.\
Karma has a plugin {\field{\*\fldinst{HYPERLINK "https://github.com/mattlewis92/karma-coverage-istanbul-reporter"}}{\fldrslt \cf3 karma-coverage-istanbul-reporter}} to generate coverage report, which is a html page, zipped them as an Artifact: coverage.zip. TeamCity could recognize it and create a Code Coverage tab for you automatically.\
\
\pard\pardeftab720\partightenfactor0

\i \cf2 In an Angular project, Start a test by command: **ng test \'96code-coverage
\i0 \cf2 \
TeamCity could generate a nice statistic report for you based on historical unit test results.}